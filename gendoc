#!/bin/sh

set -ex

if test ! -e ./epeg.c; then
  cp -v ./epeg.c.in ./epeg.c 2>&1
  if test -w ./epeg.c; then
    echo "/* GENDOC: ORIGINAL INPUT FILE (epeg.c.in) ENDS HERE */" >> ./epeg.c
  fi
fi

if test "x${ALSO_CHECK_HEADERS}" = "xYES"; then
  for I in `find ./src/lib -name "Epeg.h" -print`; do
    echo "/* ADDED BY GENDOC: CONTENTS OF '${I}': */" >> ./epeg.c
    cat ${I} >> ./epeg.c
  done
fi
for J in `find ./src/lib -name "*.c" -print`; do
  echo "/* ADDED BY GENDOC: CONTENTS OF '${J}': */" >> ./epeg.c
  cat ${J} >> ./epeg.c
done

if test "x${GENDOC_SHOULD_EXIT_EARLY}" = "x1"; then
  echo "just using $0 to rebuild epeg.c" && exit 0
fi

if test -x `which doxygen`; then
  rm -rfv ./doc/def || rmdir ./doc/def
  rm -rfv ./doc/docbook || rmdir ./doc/docbook
  rm -rfv ./doc/doxylatex || rmdir ./doc/doxylatex
  # skip removing html output dir because non-doxygentaed files also get put
  # into it
  # also skip regular latex dir because it has non-doxygenated files
  rm -rfv ./doc/man || rmdir ./doc/man
  rm -rfv ./doc/perlmod || rmdir ./doc/perlmod
  rm -rfv ./doc/rtf || rmdir ./doc/rtf
  rm -rfv ./doc/xml || rmdir ./doc/xml
  if test -e Doxyfile; then
    doxygen 2>&1
  else
    echo "No Doxyfile present" >&2 && exit 1
  fi
  cp -v doc/img/*.png doc/html/
else
  echo "doxygen is needed to generate documentation." >&2 && exit 1
fi

if test -d doc; then
  find doc -name .DS_Store -delete 2>&1
fi

echo "done with $0" && exit 0
